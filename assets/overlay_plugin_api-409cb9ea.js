let w=!1,f=null,t=null,o=[],p=0;const v={},l={},c=(n,s)=>{t?o?o.push(n):t.send(JSON.stringify(n)):o?o.push([n,s]):window.OverlayPluginApi.callHandler(JSON.stringify(n),s)},y=n=>{a();const s=l[n.type];s==null||s.forEach(r=>{try{r(n)}catch(e){console.error(e)}})},O=y,q=(n,s)=>{var r;a(),l[n]||(l[n]=[],o||c({call:"subscribe",events:[n]})),(r=l[n])==null||r.push(s)},b=(n,s)=>{if(a(),l[n]){const r=l[n],e=r==null?void 0:r.indexOf(s);e!==void 0&&e>-1&&(r==null||r.splice(e,1))}},h=n=>{a();const s={...n,rseq:0};let r;return t?(s.rseq=p++,r=new Promise((e,i)=>{v[s.rseq]={resolve:e,reject:i}}),c(s)):r=new Promise((e,i)=>{c(s,d=>{if(d===null){e(d);return}const u=JSON.parse(d);u.$error?i(u):e(u)})}),r},L={},E=n=>{a();const s=n.call;return(L[s]??h)(n)},a=()=>{if(!w){if(typeof window<"u"){if(f=new URLSearchParams(window.location.search).get("OVERLAY_WS"),f!==null){const n=function(s){t=new WebSocket(s),t.addEventListener("error",r=>{console.error(r)}),t.addEventListener("open",()=>{console.log("Connected!");const r=o??[];o=null,c({call:"subscribe",events:Object.keys(l)});for(const e of r)Array.isArray(e)||c(e)}),t.addEventListener("message",r=>{try{if(typeof r.data!="string"){console.error("Invalid message data received: ",r);return}const e=JSON.parse(r.data),i=(e==null?void 0:e.rseq)!==void 0?v[e.rseq]:void 0;e.rseq!==void 0&&i?(e.$error?i.reject(e):i.resolve(e),delete v[e.rseq]):y(e)}catch{console.error("Invalid message received: ",r);return}}),t.addEventListener("close",()=>{o=null,console.log("Trying to reconnect..."),window.setTimeout(()=>{n(s)},300)})};n(f)}else{const n=function(){var r;if(!((r=window.OverlayPluginApi)!=null&&r.ready)){window.setTimeout(n,300);return}const s=o??[];o=null,window.__OverlayCallback=y,c({call:"subscribe",events:Object.keys(l)});for(const e of s)Array.isArray(e)&&c(e[0],e[1])};n()}window.addOverlayListener=q,window.removeOverlayListener=b,window.callOverlayHandler=E,window.dispatchOverlayEvent=O}w=!0}};export{q as a,E as c,b as r};
